/*
 * main.cc
 *
 *  Created on: 5 Mar 2016
 *      Author: vegan
 */
#include <stdio.h>
#include "DCTHEVC.hpp"
#include "DCTHEVCdct.hpp"

Void printSqMtxPel(Pel *mtx, Int N);
Void printSqMtxCoeff(TCoeff *mtx, Int N);
Void setZeroPel(Pel *mtx, Int N);
Void setZeroCoeff(TCoeff *mtx, Int N);

int main(void)
{
	Pel block4[16] = {\
			210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,\
			45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0\
	};
	TCoeff blockT4[16] = {\
			210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,\
			45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0\
	};

	Pel block8[64] = {\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,\
			190,	85,		10,		90,		10,		120,	71,		11,\
			160,	91,		16,		200,	211,	113,	100,	19,\
			123,	64,		66,		191,	0,		101,	45,		0\
	};
	TCoeff blockT8[64] = {\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,\
			190,	85,		10,		90,		10,		120,	71,		11,\
			160,	91,		16,		200,	211,	113,	100,	19,\
			123,	64,		66,		191,	0,		101,	45,		0\
	};

	Pel block16[256] = {\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19\
	};
	TCoeff blockT16[256] = {\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19\
	};

	Pel block32[1024] = {\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19\
	};
	TCoeff blockT32[1024] = {\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19,\
			210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			130, 	30, 	10, 	220,	0, 		120, 	220, 	0,		210, 	115, 	15, 	120,	210, 	115, 	15, 	120,\
			45, 	 0, 	 0, 	110,	210, 	115, 	15, 	120,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,	0, 		120, 	220, 	0,		45, 	 0, 	 0, 	110,\
			46,		80,		3,		45, 	14, 	66,		50,		1,		160,	91,		16,		200,	211,	113,	100,	19,\
			190,	85,		10,		90,		10,		120,	71,		11,		160,	91,		16,		200,	211,	113,	100,	19,\
			160,	91,		16,		200,	211,	113,	100,	19,		46,		80,		3,		45, 	14, 	66,		50,		1,\
			123,	64,		66,		191,	0,		101,	45,		0, 		160,	91,		16,		200,	211,	113,	100,	19\
	};

	TCoeff 	coeff4[16];
	Pel 	decoded4[16];
	TCoeff 	decodedT4[16];
	setZeroPel(decoded4, 4);
	setZeroCoeff(coeff4, 4);
	setZeroCoeff(decodedT4, 4);

	TCoeff 	coeff8[64];
	Pel 	decoded8[64];
	TCoeff 	decodedT8[64];
	setZeroPel(decoded8, 8);
	setZeroCoeff(coeff8, 8);
	setZeroCoeff(decodedT8, 8);

	TCoeff 	coeff16[256];
	Pel 	decoded16[256];
	TCoeff 	decodedT16[256];
	setZeroPel(decoded16, 16);
	setZeroCoeff(coeff16, 16);
	setZeroCoeff(decodedT16, 16);

	TCoeff 	coeff32[1024];
	Pel 	decoded32[1024];
	TCoeff 	decodedT32[1024];
	setZeroPel(decoded32, 32);
	setZeroCoeff(coeff32, 32);
	setZeroCoeff(decodedT32, 32);

	Int bitDepth = 10;
	//	UInt uiStride = 4;
	//	UInt uiTrSize = 4;
	//	Int iWidth = 4;
	//	Int iHeight = 4;5
	Int maxLog2TrDynamicRange = 10;

	//xTr(Int bitDepth, Pel *block, TCoeff *coeff, UInt uiStride, UInt uiTrSize, Bool useDST, const Int maxLog2TrDynamicRange);
	//DCTHEVCdct::
	printSqMtxPel(block4, 4);
	xTr(bitDepth, block4, coeff4, 4, 4, false, maxLog2TrDynamicRange);
	printSqMtxCoeff(coeff4, 4);
	xITr(bitDepth, coeff4, decoded4, 4, 4, false, maxLog2TrDynamicRange);
	printSqMtxPel(decoded4, 4);
	//	xTrMxN(bitDepth, (Int *)block, coeff, iWidth, iHeight, false, maxLog2TrDynamicRange);
	xTrMxN(bitDepth, blockT4, coeff4, 4, 4, false, maxLog2TrDynamicRange);
	printSqMtxCoeff(coeff4, 4);
	xITrMxN(bitDepth, coeff4, decodedT4, 4, 4, false, maxLog2TrDynamicRange);
	printSqMtxCoeff(decodedT4, 4);

	printSqMtxPel(block8, 8);
	xTr(bitDepth, block8, coeff8, 8, 8, false, maxLog2TrDynamicRange);
	printSqMtxCoeff(coeff8, 8);
	xITr(bitDepth, coeff8, decoded8, 8, 8, false, maxLog2TrDynamicRange);
	printSqMtxPel(decoded8, 8);
	//	xTrMxN(bitDepth, (Int *)block, coeff, iWidth, iHeight, false, maxLog2TrDynamicRange);
	xTrMxN(bitDepth, blockT8, coeff8, 8, 8, false, maxLog2TrDynamicRange);
	printSqMtxCoeff(coeff8, 8);
	xITrMxN(bitDepth, coeff8, decodedT8, 8, 8, false, maxLog2TrDynamicRange);
	printSqMtxCoeff(decodedT8, 8);

	printSqMtxPel(block16, 16);
	xTr(bitDepth, block16, coeff16, 16, 16, false, maxLog2TrDynamicRange);
	printSqMtxCoeff(coeff16, 16);
	xITr(bitDepth, coeff16, decoded16, 16, 16, false, maxLog2TrDynamicRange);
	printSqMtxPel(decoded16, 16);
	//	xTrMxN(bitDepth, (Int *)block, coeff, iWidth, iHeight, false, maxLog2TrDynamicRange);
	xTrMxN(bitDepth, blockT16, coeff16, 16, 16, false, maxLog2TrDynamicRange);
	printSqMtxCoeff(coeff16, 16);
	xITrMxN(bitDepth, coeff16, decodedT16, 16, 16, false, maxLog2TrDynamicRange);
	printSqMtxCoeff(decodedT16, 16);

	printSqMtxPel(block32, 32);
	xTr(bitDepth, block32, coeff32, 32, 32, false, maxLog2TrDynamicRange);
	printSqMtxCoeff(coeff32, 32);
	xITr(bitDepth, coeff32, decoded32, 32, 32, false, maxLog2TrDynamicRange);
	printSqMtxPel(decoded32, 32);
	//	xTrMxN(bitDepth, (Int *)block, coeff, iWidth, iHeight, false, maxLog2TrDynamicRange);
	xTrMxN(bitDepth, blockT32, coeff32, 32, 32, false, maxLog2TrDynamicRange);
	printSqMtxCoeff(coeff32, 32);
	xITrMxN(bitDepth, coeff32, decodedT32, 32, 32, false, maxLog2TrDynamicRange);
	printSqMtxCoeff(decodedT32, 32);


	return 0;
}

Void printSqMtxPel(Pel *mtx, Int N)
{
	Int i, j;
	puts("---------");
	for(i = 0; i < N; i++)
	{
		for(j = 0; j < N; j++)
		{
			printf("%5d", (Int)*(mtx + i*N + j));
		}
		putchar('\n');
	}
}

Void printSqMtxCoeff(TCoeff *mtx, Int N)
{
	Int i, j;
	puts("---------");
	for(i = 0; i < N; i++)
	{
		for(j = 0; j < N; j++)
		{
			printf("%5d", (Int)*(mtx + i*N + j));
		}
		putchar('\n');
	}
}

Void setZeroPel(Pel *mtx, Int N)
{
	Int i;
	for(i = 0; i < N*N; i++)
	{
		*(mtx + i) = 0;
	}
}

Void setZeroCoeff(TCoeff *mtx, Int N)
{
	Int i;
	for(i = 0; i < N*N; i++)
	{
		*(mtx + i) = 0;
	}
}
